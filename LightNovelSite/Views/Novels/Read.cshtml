@model LightNovelSite.Models.Chapter
@Html.Raw(ViewBag.div)

<div class="container">

    <h1>
        Chapter @(Model.ChapterNumber + 1): @Model.ChapterTitle
    </h1>
    <hr />
    <h4>
        @Html.Raw(Model.Content)
    </h4>





    <div class="button-container">
        <a class="button" asp-action="Previous" asp-route-id="@Model.NovelId">Previous</a>
        <a class="button" asp-action="Index">Back to List</a>
        <a class="button" asp-action="OpenComments" asp-route-id="@Model.Id">Comments</a>
        @if (User.Identity!.IsAuthenticated && User.IsInRole("Admin"))
        {
            <a class="button" asp-action="EditChapter" asp-route-id="@Model.Id">Edit</a>
        }
        <a class="button" asp-action="Next" asp-route-id="@Model.NovelId">Next</a>
    </div>

    <div class="pagination button-container">
        @if (ViewBag.CurrentPage > 0)
        {
            <a href="@Url.Action("ChapterCatalog", new { page = ViewBag.CurrentPage - 1, pageSize = ViewBag.PageSize, NovelId = ViewContext.HttpContext.Request.Query["NovelId"] })" class="button">&lt; Previous</a>
        }

        @for (int i = 0; i < ViewBag.TotalPages; i++)
        {
            if (i == ViewBag.CurrentPage)
            {
                <span class="current button">@(i + 1)</span>
            }
            else
            {
                <a href="@Url.Action("ChapterCatalog", new { page = i, pageSize = ViewBag.PageSize })" class="button">@(i + 1)</a>
            }
        }

        @if (ViewBag.CurrentPage < ViewBag.TotalPages)
        {
            <a href="@Url.Action("ChapterCatalog", new { page = ViewBag.CurrentPage + 1, pageSize = ViewBag.PageSize, NovelId = ViewContext.HttpContext.Request.Query["NovelId"] })" class="button">Next &gt;</a>
        }
    </div>
</div>

<style>

    .button-container {
        display: flex; /* Enable flexbox for positioning */
        justify-content: center; /* Horizontally center elements */
    }

    .button {
        text-decoration: none;
        color: grey;
        background-color: transparent;
        border: 2px solid grey;
        padding: 7px 15px;
        border-radius: 5px;
        transition: background-color 0.3s ease;
        margin: 5px; /* Add margin between buttons */
    }

        .button:hover {
            background-color: grey;
            color: white;
        }


</style>

